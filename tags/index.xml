
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>Tags on DevOps Nuke</title>
   <link>/tags/</link>
   <description>Recent content in Tags on DevOps Nuke</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <copyright>&amp;copy; 2022 - Nyukeit</copyright>
   <lastBuildDate>Thu, 24 Nov 2022 09:52:18 +0100</lastBuildDate>
   
       <atom:link href="/tags/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>Provisioning an EC2 instance using Terraform &amp; keypair</title>
       <link>/posts/ec2-terraform-keypair-linux/</link>
       <pubDate>Thu, 24 Nov 2022 09:52:18 +0100</pubDate>
       
       <guid>/posts/ec2-terraform-keypair-linux/</guid>
       <description>&lt;p&gt;&amp;ndash; Image Credit: HashiCorp&lt;/p&gt;&lt;p&gt;This is a tutorial of the project &amp;ldquo;Provisioning an EC2 Instance using Terraform&amp;rdquo;. The goals of the project are to have an EC2 instance created using Terraform scripts and then SSH into the instance to install Java, Python and Jenkins.&lt;/p&gt;&lt;h2 id=&#34;install-terraform&#34;&gt;Install Terraform&lt;/h2&gt;&lt;p&gt;To begin with, we first need to install gnupg and software-properties-common, if not already present. This step follows the instructions mentioned in the official Terraform documentation.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install -y gnupg software-properties-common&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After installing these, we need to add the HashiCorp GPG Key to the Ubuntu system.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -O- https://apt.releases.hashicorp.com/gpg | &lt;span style=&#34;color:#ae81ff&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;gpg --dearmor | &lt;span style=&#34;color:#ae81ff&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, let&amp;rsquo;s go ahead and add the HashiCorp repository to Ubuntu. This repository will allow us to find the Terraform software on the internet.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;https://apt.releases.hashicorp.com &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;lsb_release -cs&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; main&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color:#ae81ff&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;sudo tee /etc/apt/sources.list.d/hashicorp.list&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And finally, it&amp;rsquo;s time to install Terraform itself.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install terraform&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After completion, I verified if the installation was successful using this command:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform --version&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/terraform-version.png&#34; alt=&#34;Terraform Version&#34;&gt;&lt;/p&gt;&lt;p&gt;Now that Terraform is installed, it was time to install AWSCLI, the utility to configure our AWS with credentials.&lt;/p&gt;&lt;h2 id=&#34;install-awscli&#34;&gt;Install AWSCLI&lt;/h2&gt;&lt;p&gt;Although there are a few ways to install AWSCLI, I used the method prescribed in the official documentation by Amazon.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&amp;#34;&lt;/span&gt; -o &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awscliv2.zip&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unzip awscliv2.zip&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./aws/install&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once again, I verified the successfull installation of AWSLI by checking its version by typing in the following command:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws --version&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/aws-version.png&#34; alt=&#34;AWS Version&#34;&gt;&lt;/p&gt;&lt;h2 id=&#34;aws-credentials&#34;&gt;AWS Credentials&lt;/h2&gt;&lt;p&gt;I already had an AWS account created, by means of the Simplilearn Portal, along with an access token already available in the portal.&lt;/p&gt;&lt;p&gt;Now in the terminal, we type the following command&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws configure&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/aws-configure.png&#34; alt=&#34;AWS Configure&#34;&gt;&lt;/p&gt;&lt;p&gt;AWS presents us with options to paste/type the following one by one. Press enter after pasting in each line. Note that [none] means there is no data configured for that key yet.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Access Key &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;none&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: &amp;lt;paste access key here&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Secret Key &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;none&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: &amp;lt;paste secrete key here&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Region &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;none&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: us-east-1&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output format &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;none&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: &amp;lt;leave this blank&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have our AWSCLI configured to access the AWS account, however, this is not enough to launch an EC2 instance. For that, we need a keypair.&lt;/p&gt;&lt;p&gt;Sidenote: This article makes use of the root account in AWS and does not consider any security viewpoint. Creating an IAM user account and using permission boundaries is generally suggested.&lt;/p&gt;&lt;p&gt;Again, we confirm everything is in place by verifying. Seeing is believing.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /.aws&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat credentials&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/verifyaws-credentials.png&#34; alt=&#34;Verify AWS Credentials&#34;&gt;&lt;/p&gt;&lt;h2 id=&#34;ec2-keypair&#34;&gt;EC2 Keypair&lt;/h2&gt;&lt;p&gt;In AWS dashboard, go to EC2 and on the left navigation, go to Keypair. Click on Create.&lt;/p&gt;&lt;p&gt;Give a suitable name to the keypair file and select RSA and PEM and click on Save. This will download the PEM file to the system.&lt;/p&gt;&lt;p&gt;In terminal, I created a folder for my project called &amp;rsquo;ec2tf&#39;.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir ec2tf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I wasn&amp;rsquo;t able to move the downloaded PEM file to the lab system directly. So I created the PEM file inside the terminal and pasted the contents of the downloaded file.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano ec2tf.pem&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we will change the permissions of this key file, without which EC2 will reject our connection.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; ec2tf.pem&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will use this keypair file to ssh into the newly created EC2 Instance.&lt;/p&gt;&lt;h2 id=&#34;creating-terraform-scripts&#34;&gt;Creating Terraform Scripts&lt;/h2&gt;&lt;p&gt;Now that we have the prerequisites in place, let&amp;rsquo;s create a Terraform plan and apply it to create our instance.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd myproject&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once inside your the folder, I created the Terraform creds file which will contain the same credentials that we used for AWSCLI&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano creds.tf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;provider &amp;#34;aws&amp;#34; {&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;access_key = &amp;#34;&amp;lt;your aws access key&amp;gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;secret_key = &amp;#34;&amp;lt;your aws secret key&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;region = &amp;#34;&amp;lt;your aws region&amp;gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now it&amp;rsquo;s time to create the main Terraform script that will actually execute the commands to launch our EC2 instance.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano main.tf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;resource &amp;#34;aws_instance&amp;#34; &amp;#34;myproject&amp;#34; {&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;ami = &amp;#34;ami-2757f631&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;instance_type = &amp;#34;t2.micro&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;key_name = &amp;#34;ec2tf&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NOTE: I tried searching for other Amazon Machine Images (AMI) that corresponded to the type T2.Micro but I wasn&amp;rsquo;t able to. Hence, I went ahead using the AMI ID mentioned in the Projects documentation downloaded from the portal for Course 2.&lt;/p&gt;&lt;p&gt;We now have the Terraform plan ready and we need to initiate it.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform init&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/terraform-init.png&#34; alt=&#34;Terraform Initialization&#34;&gt;&lt;/p&gt;&lt;p&gt;Once the configuration is initialized, we need to apply it for Terraform to create our EC2 instance.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform apply&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/tf-ec2-creation.png&#34; alt=&#34;Terraform Apply&#34;&gt;&lt;/p&gt;&lt;p&gt;When prompted, type &lt;strong&gt;yes&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Terraform will now begin to create the EC2 instance. This took up to a minute and a half to finish depending on the image.&lt;/p&gt;&lt;p&gt;To verify the creation of the instance, I went to my EC2 dashboard and I could see my newly created instance in the running state.&lt;/p&gt;&lt;p&gt;&lt;img src=&#34;/verify-ec2-instance-aws.png&#34; alt=&#34;EC2 Instance Running&#34;&gt;&lt;/p&gt;&lt;h2 id=&#34;connecting-to-ec2-instance-using-ssh&#34;&gt;Connecting to EC2 Instance using SSH&lt;/h2&gt;&lt;p&gt;The reason why I initiated my instance using a keypair file was to be able to SSH into it after creation. And we will see how this became very easy now.&lt;/p&gt;&lt;p&gt;The first step is to go to the EC2 dashboard and click on &lt;strong&gt;Security Groups&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;There, select the security group and click on &lt;strong&gt;Inbound Rules&lt;/strong&gt; tab. Click on Edit Inbound Rules&lt;/p&gt;&lt;p&gt;There was a default rule already added.&lt;/p&gt;&lt;p&gt;Click on &lt;strong&gt;Add Rule&lt;/strong&gt; and select the protocol as &lt;strong&gt;SSH&lt;/strong&gt; and source as &lt;strong&gt;Custom&lt;/strong&gt;. Click on the search box next to Custom and select &lt;strong&gt;0.0.0.0/0&lt;/strong&gt; and save the rule.&lt;/p&gt;&lt;p&gt;My EC2 instance was now ready to accept incoming SSH connections.&lt;/p&gt;&lt;p&gt;Before moving ahead, I needed the public IPv4 DNS address of my instance. I found this be going to Instances in the EC2 dashboard and selecting my running instance.&lt;/p&gt;&lt;p&gt;Now to login to the EC2 instance, we type the following&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ssh -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ec2tf.pem&amp;#34;&lt;/span&gt; ubuntu@ip4-public-dns&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: I found that Amazon AWS has default usernames for AMIs based on the type of image which can be found on &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connection-prereqs.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;p&gt;When prompted, type &lt;strong&gt;yes&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;&lt;img src=&#34;/ssh-ec2-instance.png&#34; alt=&#34;Succesfull Connection to EC2&#34;&gt;&lt;/p&gt;&lt;p&gt;With this, I successfully logged in to my new EC2 instance using SSH. Now it was time to install Java, Python and Jenkins.&lt;/p&gt;&lt;h2 id=&#34;installing-java&#34;&gt;Installing Java&lt;/h2&gt;&lt;p&gt;The step that I had thought was the most straightforward actually turned up a small challenge. Jenkins requires Java to run, so I had to install java first. The official documentation of Jenkins mentions installing openjdk-11-jre but I could not come around to install this.&lt;/p&gt;&lt;p&gt;Trying the other method of installing default-jre was installing an older version of Java which was incompatible with Jenkins.&lt;/p&gt;&lt;p&gt;Thus, I had to search for a PPA to work around this.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo add-apt-repository ppa:openjdk-r/ppa&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install openjdk-11-jdk&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, we verify the java version installed.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -version&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/java-version.png&#34; alt=&#34;Verifying Java Version&#34;&gt;&lt;/p&gt;&lt;h2 id=&#34;installing-python&#34;&gt;Installing Python&lt;/h2&gt;&lt;p&gt;Python comes pre-installed in Ubuntu 16.04, so I had to only upgrade it from the current version to the latest version. This was checked using&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 --version&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/python-version.png&#34; alt=&#34;Python Version&#34;&gt;&lt;/p&gt;&lt;p&gt;To upgrade, I used the apt package manager.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt upgrade python3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And finally, it was time to install Jenkins.&lt;/p&gt;&lt;h2 id=&#34;installing-jenkins&#34;&gt;Installing Jenkins&lt;/h2&gt;&lt;p&gt;Since we already installed Java, we can now proceed to installing Jenkins. We first add the key and repository to fetch the Jenkins installer.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee &lt;span style=&#34;color:#ae81ff&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  /usr/share/keyrings/jenkins-keyring.asc &amp;gt; /dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo deb https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/add-jenkins-keys.png&#34; alt=&#34;Jenkins Keys&#34;&gt;&lt;/p&gt;&lt;p&gt;Now we update the repository list.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And finally, installing Jenkins.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install jenkins&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/install-jenkins.png&#34; alt=&#34;Installing Jenkins&#34;&gt;&lt;/p&gt;&lt;p&gt;Once Jenkins is installed, we verify the installation using&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl status jenkins.service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/verify-jenkins.png&#34; alt=&#34;Verify Jenkins Service Running&#34;&gt;&lt;/p&gt;&lt;p&gt;With this, the project was successfully completed.&lt;/p&gt;&lt;h2 id=&#34;challenges&#34;&gt;Challenges&lt;/h2&gt;&lt;p&gt;Since this was my first DevOps project and it was mentioned that we have not sufficiently covered all the topics in the lecture required to complete this project, there were a few challenges that needed to be conquered.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Initially, I managed to create an EC2 instance using Terraform but did not create a keypair first. Although an existing EC2 instance can be configured with a new keypair, the process is rather advanced and tedious. So I had to delete the instance and start over again.&lt;/li&gt;&lt;li&gt;Finding out an Amazon Machine Image ID was not straightforward. After spending a lot of time searching for a suitable AMI, I had to go back to the project documentation and use the AMI mentioned in it.&lt;/li&gt;&lt;li&gt;SSH into the new instance posed a few bottlenecks including connection timed out errors. This was finally solved by adding the inbound SSH connection rules in the Security Groups. Even then, I had to use sudo to successfully SSH into the instance.&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;&lt;p&gt;I got help from a lot of discussions and tutorials from the internet as linked below, in addition to the project documentation provided by Simplilearn.&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connection-prereqs.html&#34;&gt;AWS EC2 User Guides - Connection Prerequisites&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html#AccessingInstancesLinuxSSHClient&#34;&gt;AWS EC2 User Guides - Accessing Instances using SSH&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://ifritltd.com/2017/12/06/provisioning-ec2-key-pairs-with-terraform/&#34;&gt;Provisioning EC2 Keypairs with Terraform&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://www.techtarget.com/searchcloudcomputing/tip/How-to-launch-an-EC2-instance-using-Terraform&#34;&gt;How To Launch An EC2 Instance Using Terraform&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://medium.com/tensult/unable-to-connect-your-ec2-instance-using-ssh-842f6f6f0d04&#34;&gt;Unable to Connect to Your EC2 Instance Using SSH&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-jenkins-on-ubuntu-16-04&#34;&gt;How to Install Jenkins on Ubuntu 16.04&lt;/a&gt;&lt;/p&gt;</description>
     </item>
   
 </channel>
</rss>
